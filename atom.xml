<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://g-h-li.github.io/GH-Li.github.io/</id>
    <title>GH-Li的分享</title>
    <updated>2021-04-09T00:15:14.824Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://g-h-li.github.io/GH-Li.github.io/"/>
    <link rel="self" href="https://g-h-li.github.io/GH-Li.github.io/atom.xml"/>
    <subtitle>I&apos;m going to live every minute of my life!</subtitle>
    <logo>https://g-h-li.github.io/GH-Li.github.io/images/avatar.png</logo>
    <icon>https://g-h-li.github.io/GH-Li.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, GH-Li的分享</rights>
    <entry>
        <title type="html"><![CDATA[动态规划]]></title>
        <id>https://g-h-li.github.io/GH-Li.github.io/post/dong-tai-gui-hua/</id>
        <link href="https://g-h-li.github.io/GH-Li.github.io/post/dong-tai-gui-hua/">
        </link>
        <updated>2021-04-08T23:19:30.000Z</updated>
        <content type="html"><![CDATA[<h2 id="定义">定义</h2>
<h2 id="算法描述">算法描述</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTTP与HTTPS]]></title>
        <id>https://g-h-li.github.io/GH-Li.github.io/post/http-yu-https/</id>
        <link href="https://g-h-li.github.io/GH-Li.github.io/post/http-yu-https/">
        </link>
        <updated>2021-04-06T16:06:44.000Z</updated>
        <content type="html"><![CDATA[<h2 id="http">HTTP</h2>
<h2 id="https">HTTPS</h2>
<ol>
<li><strong>是什么</strong><br>
HTTP+SSL(Security Sockets Layer)，通过SSL搭建隧道进行通信</li>
<li><strong>为什么</strong>：HTTP存在安全性问题
<ul>
<li>使用明文通信，容易被窃取</li>
<li>无法确认通信方的身份，容易伪装</li>
<li>报文可能会被修改</li>
</ul>
</li>
<li><strong>怎么办</strong><br>
为了解决http的安全性问题，https通过以下三点来实现：
<ul>
<li>加密（非对称加密与对称加密相结合）：首先使用非对称加密进行身份认证，认证成功后使用对称加密进行数据传输。</li>
<li>认证（证书机制）：TSL证书核验</li>
<li>完整性保护（报文摘要）：</li>
</ul>
</li>
<li><strong>操作流程</strong><br>
<img src="https://g-h-li.github.io/GH-Li.github.io//post-images/1617927307013.png" alt="" loading="lazy"></li>
</ol>
<h2 id="参考资料">参考资料</h2>
<ul>
<li><a href="https://github.com/CyC2018/CS-Notes/blob/master/notes/HTTP.md#%E5%85%ADhttps">CS-Notes HTTPS</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[二分查找]]></title>
        <id>https://g-h-li.github.io/GH-Li.github.io/post/er-fen-cha-zhao/</id>
        <link href="https://g-h-li.github.io/GH-Li.github.io/post/er-fen-cha-zhao/">
        </link>
        <updated>2021-04-06T04:26:09.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="注意点">注意点：</h2>
<ul>
<li><code>high=num.length -1; low=0</code></li>
<li><code>mid = (low + high) &gt;&gt; 1</code></li>
<li>循环终止条件：<code>low &lt;= high</code>，不是<code>low&lt;high</code></li>
<li>跳出循环时，<code>low != high</code></li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h2 id="注意点">注意点：</h2>
<ul>
<li><code>high=num.length -1; low=0</code></li>
<li><code>mid = (low + high) &gt;&gt; 1</code></li>
<li>循环终止条件：<code>low &lt;= high</code>，不是<code>low&lt;high</code></li>
<li>跳出循环时，<code>low != high</code></li>
</ul>
<!-- more -->
<h2 id="算法应用">算法应用</h2>
<pre><code class="language-java">//num为升序数组
public int search(int[] nums, int target){
    int low=0; int high= num.length-1; int mid;
    while(low &lt;= high){
        mid = (low+high) &gt;&gt; 1;
        if(nums[mid] == target){
            return mid;
        }else if(nums[mid] &lt; target){
            low = mid +1;
        }else{
            high = mid -1;
        }
    }
}
</code></pre>
<p>在应用过程中，会出现相关变种，变化主要存在两处：</p>
<ol>
<li>改变if-else的判断条件：如将<code>==</code>和<code>&lt;</code>这两种情况合并，以此去查找target在有序数组的上边界（<code>low</code>)，只判断<code>&lt;</code>，查找target在有序数组的下边界（<code>high</code>)。</li>
<li>改变<code>low</code>和<code>high</code>值的变化规则，如：查找循环数组分界点、查找山峰数组的山峰、</li>
</ol>
<h2 id="查找意义">查找意义</h2>
<p>查找意义的判断主要根据：mid值变化的判断式进行判定</p>
<ul>
<li><code>nums[mid] == target</code> ：查找等于target的值位置（<code>mid</code>）</li>
<li><code>nums[mid] &lt; target</code> ：查找小于taget的最大值位置（<code>high</code>)</li>
<li><code>nums[mid] &lt;= target</code>：查找大于target的最小值位置 （<code>low</code>)</li>
</ul>
]]></content>
    </entry>
</feed>